{"title":"Osagai","logo":"üÄÑÔ∏è","githubRepo":"HenriqueLimas/osagai","googleAnalytics":"UA-37033501-5","index":{"title":"Home","description":"Create WebComponents with no class, just functions","content":" Simple component Osagai export a define() function to create your WebComponent. Your component is a function that returns a template with the view definition Adding event listeners In addition, in you component function it will be injected some useful methods like query that you could query inside the component tree and add event listeners with the on method from osagai/events. An application Besides query, Osagai will also inject an update function that you can use for changing the data (or state) being used in the template function. This will check what it needs to be changed in the DOM and apply the re-render A real application This a \"real\" example of the Hacker News implemented with Osagai as a PWA. You can se the code on Github, or try it live here. ","srcFilePath":"src/pages/index.soy","id":"pages","location":"/./","url":"/osagai/./","children":{"docs":{"title":"Docs","description":"Everything you need to know to get started.","content":" Docs Start learning how to leverage the power of . Choose a Guide Each one provide step by step coverage for every core feature. ","srcFilePath":"src/pages/docs/index.soy","id":"docs","location":"/docs/","url":"/osagai/docs/","children":{"search":{"title":"Search","description":"Find what you're looking for in the documentation.","hidden":true,"content":" Electric Docs Start learning how to leverage the power of . ","srcFilePath":"src/pages/docs/search.soy","id":"search","location":"/docs/search.html","url":"/osagai/docs/search.html"},"getting-started":{"description":"Getting started with a Osagai.","icon":"arrow-right-rod","layout":"guide","title":"Getting Started","weight":1,"content":" Install Using package managers You can get it on npm. npm install osagai Or with yarn yarn add osagai Import from a CDN You can also import directly from unpkg import { define } from \"https://unpkg.com/osagai/osagai.mjs\"; CDN links Osagai are available over a CDN. Define a Web component Osagai comes with a function called define that defines a new custom element that you can use in your application. define receives the name of the custom element (it must contain a hyphen) and the Osagai component. The Osagai component is a function that returns a Template with a string representing the layout of the web component. import { define } from 'osagai' function MyComponent() { return () = Hi üëã! } define('waving-hand', MyComponent) Now, you just need to use your new custom element in your application. Modules Osagai is separated by different modules, in a way that you can import only what you need for your custom element. osagai This is the main module where you can find the function for defining your custom element. import { define } from 'osagai' events This is the module with useful methods like on for adding event listeners to components import { on } from 'osagai/events' lifecycles This is the module for the custome elements lifecyles like connectedCallback and disconnectedCallback import { onConnected, onDisconnected } from 'osagai/lifecycles' ","srcFilePath":"src/pages/docs/getting-started/index.md","id":"getting-started","location":"/docs/getting-started/","url":"/osagai/docs/getting-started/"}},"childIds":["getting-started","search"]}},"childIds":["docs"]},"basePath":"/osagai"}